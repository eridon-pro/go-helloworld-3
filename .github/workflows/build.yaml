name: "CI Pipeline"

on:
  push:
    branches:
      - main

jobs:
  Build:
    # [skip ci] を含むコミットはこのジョブをトリガーしない
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      # 1. リポジトリのコードをチェックアウト
      - name: checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      # 2. 静的解析：GolangCI-Lint を実行
      - name: Run GolangCI-Lint
        uses: golangci/golangci-lint-action@v3
      #  with:
      #    version: v1.50.1

      # 3. テストの実行
      - name: Run tests
        run: go test -v ./...

      # 4. GitHub Container Registry (ghcr.io) へのログイン
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5. Docker Buildx のセットアップ（マルチプラットフォーム対応）
      - name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      # 6. Docker イメージのビルド＆プッシュ
      - name: Build and Publish
        run: |
          docker buildx build \
            --push \
            --platform linux/arm/v7,linux/amd64 \
            -t ghcr.io/eridon-pro/go-helloworld-3:${{ github.sha }} .

      # 7. Trivy によるイメージスキャン
      - name: Scan Docker Image with Trivy
        # Latest as of 20250320
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ghcr.io/eridon-pro/go-helloworld-3:${{ github.sha }}
          format: table
          exit-code: '1'
          severity: HIGH,CRITICAL

      # 8. マニフェストの更新
      - name: Update manifest with new image tag
        run: |
          NEW_TAG=${{ github.sha }}
          MANIFEST_FILE="manifest/deployment.yaml"
          # マニフェスト内の image フィールドを新しいタグに置換
          sed -i "s|ghcr.io/eridon-pro/go-helloworld-3:.*|ghcr.io/eridon-pro/go-helloworld-3:${NEW_TAG}|g" ${MANIFEST_FILE}
          # Git の設定を行い、変更をコミット＆プッシュ
          #git config user.name "github-actions[bot]"
          #git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "eridon-pro"
          git config user.email "take@erikawa.com"
          git add ${MANIFEST_FILE}
          # コミットメッセージに [skip ci] を追加して、push による再トリガーを防止
          #git commit -m "Update deployment image tag to ${NEW_TAG}"
          git commit -m "Update deployment image tag to ${NEW_TAG} [skip ci]"
          # リモート URL を PAT を含む形に設定
          git remote set-url origin "https://${{ secrets.PAT_TOKEN }}@github.com/eridon-pro/go-helloworld-3.git"
          git push origin main
